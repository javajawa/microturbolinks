'use strict';const parser=new DOMParser,crypto=window.crypto.subtle,encoder=new TextEncoder;export function addDefaultHooks(){window.addEventListener("click",defaultEventHandler),window.addEventListener("popstate",()=>{loadPage(document.location)})}export function defaultEventHandler(a){if(0===a.button&&!(a.ctrlKey||a.shiftKey||a.metaKey||a.altKey)){const b=a.target.closest("a");if(b&&!b.hasAttribute("target")&&b.hasAttribute("href")){const c=b.getAttribute("href");if(!c.startsWith("#")&&!c.match(/\/\//)){const d=new CustomEvent("turbo:fetch",{detail:c});b.dispatchEvent(d)&&(a.preventDefault(),loadPage(c),window.history.pushState(null,null,c))}}}}export async function loadPage(a){const b=await fetch(a).then(a=>a.text()).then(a=>parser.parseFromString(a,"text/html"));diffAndImportTree(document.head,b.head),diffAndImportTree(document.body,b.body)}export async function diffAndImportTree(a,b,c){c=c||digestSHA;const d=await Promise.all([...b.children].map(c));let f,g,h=0,i=0;for(;h<a.childElementCount;){if(f=a.children[h],g=d.indexOf(await c(f)),g<i){const b=new CustomEvent("turbo:delete");if(f.dispatchEvent(b)){a.removeChild(f);continue}++h;continue}if(g>i){let c=[...b.children].slice(i,g);c.forEach(b=>a.insertBefore(b.cloneNode(!0),f))}h+=g-i+1,i=g+1}if(i<d.length-1){let c=[...b.children].slice(i);c.forEach(b=>a.appendChild(b))}}async function digestSHA(a){const b=await crypto.digest("SHA-1",encoder.encode(a.outerHTML));return new Uint8Array(b).reduce((b,a)=>b+a.toString(16),"")}